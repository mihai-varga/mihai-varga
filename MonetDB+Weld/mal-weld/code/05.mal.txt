+-------------------------------------------------------------------------------------------------------------------------------------+
| mal                                                                                                                                 |
+=====================================================================================================================================+
| function user.s2_1():void;                                                                                                          |
|     X_6:void := querylog.define("explain\nselect\n n_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n customer,\n |
:  orders,\n lineitem,\n supplier,\n nation,\n region\nwhere\n c_custkey = o_custkey\n and l_orderkey = o_orderkey\n and l_suppkey =  :
: s_suppkey\n and c_nationkey = s_nationkey\n and s_nationkey = n_nationkey\n and n_regionkey = r_regionkey\n and r_name = \\'ASIA\\' :
: \n and o_orderdate >= date \\'1994-01-01\\'\n and o_orderdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n n_name\no :
: rder by\n revenue desc;":str, "default_pipe":str, 199:int);                                                                         :
|     X_279:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_285:bat[:int] := bat.new(nil:int);                                                                                            |
|     X_283:bat[:int] := bat.new(nil:int);                                                                                            |
|     X_282:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_281:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_9:int := sql.mvc();                                                                                                           |
|     X_13:bat[:date] := sql.bind(X_9:int, "sys":str, "orders":str, "o_orderdate":str, 0:int);                                        |
|     C_10:bat[:oid] := sql.tid(X_9:int, "sys":str, "orders":str);                                                                    |
|     C_34:bat[:oid] := algebra.select(X_13:bat[:date], C_10:bat[:oid], "1994-01-01":date, "1995-01-01":date, true:bit, false:bit, fa |
: lse:bit);                                                                                                                           :
|     X_23:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 0:int);                        |
|     (X_26:bat[:oid], X_27:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 2:int);      |
|     X_25:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 1:int);                        |
|     X_40:bat[:oid] := sql.projectdelta(C_34:bat[:oid], X_23:bat[:oid], X_26:bat[:oid], X_27:bat[:oid], X_25:bat[:oid]);             |
|     C_41:bat[:oid] := sql.tid(X_9:int, "sys":str, "customer":str);                                                                  |
|     (X_50:bat[:oid], X_51:bat[:oid]) := algebra.join(X_40:bat[:oid], C_41:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng);         |
|     X_56:bat[:oid] := algebra.projection(X_50:bat[:oid], C_34:bat[:oid]);                                                           |
|     C_60:bat[:oid] := sql.tid(X_9:int, "sys":str, "lineitem":str);                                                                  |
|     X_83:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 0:int);                   |
|     (X_86:bat[:oid], X_87:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 2:int); |
|     X_85:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 1:int);                   |
|     X_89:bat[:oid] := sql.projectdelta(C_60:bat[:oid], X_83:bat[:oid], X_86:bat[:oid], X_87:bat[:oid], X_85:bat[:oid]);             |
|     (X_90:bat[:oid], X_91:bat[:oid]) := algebra.join(X_56:bat[:oid], X_89:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng);         |
|     X_62:bat[:int] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_suppkey":str, 0:int);                                         |
|     X_101:bat[:int] := algebra.projectionpath(X_91:bat[:oid], C_60:bat[:oid], X_62:bat[:int]);                                      |
|     X_138:bat[:lng] := batmkey.hash(X_101:bat[:int]);                                                                               |
|     X_43:bat[:int] := sql.bind(X_9:int, "sys":str, "customer":str, "c_nationkey":str, 0:int);                                       |
|     X_99:bat[:int] := algebra.projectionpath(X_90:bat[:oid], X_51:bat[:oid], C_41:bat[:oid], X_43:bat[:int]);                       |
|     X_141:bat[:lng] := mkey.bulk_rotate_xor_hash(X_138:bat[:lng], 22:int, X_99:bat[:int]);                                          |
|     C_105:bat[:oid] := sql.tid(X_9:int, "sys":str, "supplier":str);                                                                 |
|     X_107:bat[:int] := sql.bind(X_9:int, "sys":str, "supplier":str, "s_suppkey":str, 0:int);                                        |
|     X_113:bat[:int] := algebra.projection(C_105:bat[:oid], X_107:bat[:int]);                                                        |
|     X_143:bat[:lng] := batmkey.hash(X_113:bat[:int]);                                                                               |
|     X_114:bat[:int] := sql.bind(X_9:int, "sys":str, "supplier":str, "s_nationkey":str, 0:int);                                      |
|     X_120:bat[:int] := algebra.projection(C_105:bat[:oid], X_114:bat[:int]);                                                        |
|     X_144:bat[:lng] := mkey.bulk_rotate_xor_hash(X_143:bat[:lng], 22:int, X_120:bat[:int]);                                         |
|     (X_145:bat[:oid], X_146:bat[:oid]) := algebra.join(X_141:bat[:lng], X_144:bat[:lng], nil:BAT, nil:BAT, false:bit, nil:lng);     |
|     X_147:bat[:int] := algebra.projection(X_145:bat[:oid], X_101:bat[:int]);                                                        |
|     X_148:bat[:int] := algebra.projection(X_146:bat[:oid], X_113:bat[:int]);                                                        |
|     X_149:bat[:bit] := batcalc.==(X_147:bat[:int], X_148:bat[:int]);                                                                |
|     C_154:bat[:oid] := algebra.thetaselect(X_149:bat[:bit], true:bit, "==":str);                                                    |
|     X_155:bat[:oid] := algebra.projection(C_154:bat[:oid], X_145:bat[:oid]);                                                        |
|     X_157:bat[:int] := algebra.projection(X_155:bat[:oid], X_99:bat[:int]);                                                         |
|     X_156:bat[:oid] := algebra.projection(C_154:bat[:oid], X_146:bat[:oid]);                                                        |
|     X_158:bat[:int] := algebra.projection(X_156:bat[:oid], X_120:bat[:int]);                                                        |
|     X_159:bat[:bit] := batcalc.==(X_157:bat[:int], X_158:bat[:int]);                                                                |
|     C_161:bat[:oid] := algebra.thetaselect(X_159:bat[:bit], true:bit, "==":str);                                                    |
|     X_121:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "supplier":str, "supplier_s_nationkey_fkey":str, 0:int);                 |
|     (X_124:bat[:oid], X_125:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "supplier":str, "supplier_s_nationkey_fkey":str, 2:in |
: t);                                                                                                                                 :
|     X_123:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "supplier":str, "supplier_s_nationkey_fkey":str, 1:int);                 |
|     X_127:bat[:oid] := sql.projectdelta(C_105:bat[:oid], X_121:bat[:oid], X_124:bat[:oid], X_125:bat[:oid], X_123:bat[:oid]);       |
|     X_175:bat[:oid] := algebra.projectionpath(C_161:bat[:oid], X_156:bat[:oid], X_127:bat[:oid]);                                   |
|     C_176:bat[:oid] := sql.tid(X_9:int, "sys":str, "nation":str);                                                                   |
|     (X_192:bat[:oid], X_193:bat[:oid]) := algebra.join(X_175:bat[:oid], C_176:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng);     |
|     X_185:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "nation":str, "nation_n_regionkey_fkey":str, 0:int);                     |
|     (X_188:bat[:oid], X_189:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "nation":str, "nation_n_regionkey_fkey":str, 2:int);  |
|     X_187:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "nation":str, "nation_n_regionkey_fkey":str, 1:int);                     |
|     X_191:bat[:oid] := sql.projectdelta(C_176:bat[:oid], X_185:bat[:oid], X_188:bat[:oid], X_189:bat[:oid], X_187:bat[:oid]);       |
|     X_212:bat[:oid] := algebra.projection(X_193:bat[:oid], X_191:bat[:oid]);                                                        |
|     X_215:bat[:str] := sql.bind(X_9:int, "sys":str, "region":str, "r_name":str, 0:int);                                             |
|     C_213:bat[:oid] := sql.tid(X_9:int, "sys":str, "region":str);                                                                   |
|     C_229:bat[:oid] := algebra.thetaselect(X_215:bat[:str], C_213:bat[:oid], "ASIA":str, "==":str);                                 |
|     (X_233:bat[:oid], X_234:bat[:oid]) := algebra.join(X_212:bat[:oid], C_229:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng);     |
|     X_162:bat[:oid] := algebra.projection(C_161:bat[:oid], X_155:bat[:oid]);                                                        |
|     X_69:bat[:lng] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_extendedprice":str, 0:int);                                   |
|     X_245:bat[:lng] := algebra.projectionpath(X_233:bat[:oid], X_192:bat[:oid], X_162:bat[:oid], X_91:bat[:oid], C_60:bat[:oid], X_ |
: 69:bat[:lng]);                                                                                                                      :
|     X_76:bat[:lng] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_discount":str, 0:int);                                        |
|     X_246:bat[:lng] := algebra.projectionpath(X_233:bat[:oid], X_192:bat[:oid], X_162:bat[:oid], X_91:bat[:oid], C_60:bat[:oid], X_ |
: 76:bat[:lng]);                                                                                                                      :
|     X_260:bat[:lng] := batcalc.-(100:lng, X_246:bat[:lng]);                                                                         |
|     X_263:bat[:lng] := batcalc.*(X_245:bat[:lng], X_260:bat[:lng]);                                                                 |
|     X_178:bat[:str] := sql.bind(X_9:int, "sys":str, "nation":str, "n_name":str, 0:int);                                             |
|     X_251:bat[:str] := algebra.projectionpath(X_233:bat[:oid], X_193:bat[:oid], C_176:bat[:oid], X_178:bat[:str]);                  |
|     (X_265:bat[:oid], C_266:bat[:oid], X_267:bat[:lng]) := group.groupdone(X_251:bat[:str]);                                        |
|     X_269:bat[:lng] := aggr.subsum(X_263:bat[:lng], X_265:bat[:oid], C_266:bat[:oid], true:bit, true:bit);                          |
|     (X_272:bat[:lng], X_273:bat[:oid], X_274:bat[:oid]) := algebra.sort(X_269:bat[:lng], true:bit, false:bit);                      |
|     X_276:bat[:str] := algebra.projectionpath(X_273:bat[:oid], C_266:bat[:oid], X_251:bat[:str]);                                   |
|     X_277:bat[:lng] := algebra.projection(X_273:bat[:oid], X_269:bat[:lng]);                                                        |
|     X_286:bat[:str] := bat.append(X_279:bat[:str], "sys.nation":str);                                                               |
|     X_288:bat[:str] := bat.append(X_281:bat[:str], "n_name":str);                                                                   |
|     X_290:bat[:str] := bat.append(X_282:bat[:str], "char":str);                                                                     |
|     X_292:bat[:int] := bat.append(X_283:bat[:int], 25:int);                                                                         |
|     X_294:bat[:int] := bat.append(X_285:bat[:int], 0:int);                                                                          |
|     X_296:bat[:str] := bat.append(X_286:bat[:str], "sys.L4":str);                                                                   |
|     X_298:bat[:str] := bat.append(X_288:bat[:str], "revenue":str);                                                                  |
|     X_300:bat[:str] := bat.append(X_290:bat[:str], "decimal":str);                                                                  |
|     X_302:bat[:int] := bat.append(X_292:bat[:int], 18:int);                                                                         |
|     X_304:bat[:int] := bat.append(X_294:bat[:int], 4:int);                                                                          |
|     sql.resultSet(X_296:bat[:str], X_298:bat[:str], X_300:bat[:str], X_302:bat[:int], X_304:bat[:int], X_276:bat[:str], X_277:bat[: |
: lng]);                                                                                                                              :
| end user.s2_1;                                                                                                                      |
| #inline               actions= 0 time=4 usec                                                                                        |
| #remap                actions= 6 time=97 usec                                                                                       |
| #costmodel            actions= 1 time=4 usec                                                                                        |
| #coercion             actions= 4 time=21 usec                                                                                       |
| #evaluate             actions= 8 time=51 usec                                                                                       |
| #emptybind            actions= 9 time=24 usec                                                                                       |
| #pushselect           actions=11 time=54 usec                                                                                       |
| #aliases              actions=22 time=22 usec                                                                                       |
| #mergetable           actions= 0 time=157 usec                                                                                      |
| #deadcode             actions=68 time=33 usec                                                                                       |
| #aliases              actions= 0 time=1 usec                                                                                        |
| #constants            actions=38 time=32 usec                                                                                       |
| #commonTerms          actions= 0 time=15 usec                                                                                       |
| #projectionpath       actions=15 time=28 usec                                                                                       |
| #deadcode             actions=15 time=20 usec                                                                                       |
| #reorder              actions= 1 time=55 usec                                                                                       |
| #matpack              actions= 0 time=1 usec                                                                                        |
| #multiplex            actions= 0 time=2 usec                                                                                        |
| #profiler             actions=1 time=3 usec                                                                                         |
| #candidates           actions=1 time=2 usec                                                                                         |
| #deadcode             actions= 0 time=16 usec                                                                                       |
| #wlc                  actions= 0 time=0 usec                                                                                        |
| #garbagecollector     actions= 1 time=143 usec                                                                                      |
| #total                actions=28 time=973 usec                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------+
114 tuples
