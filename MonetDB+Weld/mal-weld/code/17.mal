+-------------------------------------------------------------------------------------------------------------------------------------+
| mal                                                                                                                                 |
+=====================================================================================================================================+
| function user.main():void;                                                                                                          |
|     X_9:void := querylog.define("explain\nselect\n sum(l_extendedprice) / 7.0 as avg_yearly\nfrom\n lineitem,\n part\nwhere\n p_par |
: tkey = l_partkey\n and p_brand = 'Brand#23'\n and p_container = 'MED BOX'\n and l_quantity < (\n select\n 0.2 * avg(l_quantity)\n f :
: rom\n lineitem\n where\n l_partkey = p_partkey\n );":str, "default_pipe":str, 205:int);                                             :
|     X_12:int := sql.mvc();                                                                                                          |
|     C_13:bat[:oid] := sql.tid(X_12:int, "sys":str, "lineitem":str);                                                                 |
|     X_26:bat[:int] := sql.bind(X_12:int, "sys":str, "lineitem":str, "l_partkey":str, 0:int);                                        |
|     X_32:bat[:int] := algebra.projection(C_13:bat[:oid], X_26:bat[:int]);                                                           |
|     X_168:bat[:str] := sql.bind(X_12:int, "sys":str, "part":str, "p_container":str, 0:int);                                         |
|     X_161:bat[:str] := sql.bind(X_12:int, "sys":str, "part":str, "p_brand":str, 0:int);                                             |
|     C_152:bat[:oid] := sql.tid(X_12:int, "sys":str, "part":str);                                                                    |
|     C_182:bat[:oid] := algebra.thetaselect(X_161:bat[:str], C_152:bat[:oid], "Brand#23":str, "==":str);                             |
|     C_187:bat[:oid] := algebra.thetaselect(X_168:bat[:str], C_182:bat[:oid], "MED BOX":str, "==":str);                              |
|     X_154:bat[:int] := sql.bind(X_12:int, "sys":str, "part":str, "p_partkey":str, 0:int);                                           |
|     X_188:bat[:int] := algebra.projection(C_187:bat[:oid], X_154:bat[:int]);                                                        |
|     (X_217:bat[:oid], X_218:bat[:oid]) := algebra.join(X_188:bat[:int], X_32:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);      |
|     X_223:bat[:int] := algebra.projection(X_217:bat[:oid], X_188:bat[:int]);                                                        |
|     (X_233:bat[:oid], X_234:bat[:oid]) := algebra.join(X_32:bat[:int], X_223:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);      |
|     X_193:bat[:int] := sql.bind(X_12:int, "sys":str, "lineitem":str, "l_orderkey":str, 0:int);                                      |
|     X_226:bat[:int] := algebra.projectionpath(X_218:bat[:oid], C_13:bat[:oid], X_193:bat[:int]);                                    |
|     X_230:bat[:oid] := batcalc.identity(X_226:bat[:int]);                                                                           |
|     X_259:bat[:oid] := algebra.projection(X_234:bat[:oid], X_230:bat[:oid]);                                                        |
|     (X_260:bat[:oid], C_261:bat[:oid], X_262:bat[:lng]) := group.groupdone(X_259:bat[:oid]);                                        |
|     X_47:bat[:lng] := sql.bind(X_12:int, "sys":str, "lineitem":str, "l_quantity":str, 0:int);                                       |
|     X_53:bat[:lng] := algebra.projection(C_13:bat[:oid], X_47:bat[:lng]);                                                           |
|     X_263:bat[:lng] := algebra.projectionpath(C_261:bat[:oid], X_234:bat[:oid], X_218:bat[:oid], X_53:bat[:lng]);                   |
|     X_239:bat[:lng] := algebra.projection(X_233:bat[:oid], X_53:bat[:lng]);                                                         |
|     X_266:bat[:dbl] := batcalc.dbl(2:int, X_239:bat[:lng]);                                                                         |
|     X_270:bat[:dbl] := aggr.subavg(X_266:bat[:dbl], X_260:bat[:oid], C_261:bat[:oid], true:bit, true:bit);                          |
|     X_278:bat[:dbl] := batcalc.dbl(2:int, X_263:bat[:lng]);                                                                         |
|     X_276:bat[:dbl] := batcalc.*(X_270:bat[:dbl], 0.2:dbl);                                                                         |
|     X_279:bat[:bit] := batcalc.<(X_278:bat[:dbl], X_276:bat[:dbl]);                                                                 |
|     C_281:bat[:oid] := algebra.select(X_279:bat[:bit], true:bit, true:bit, true:bit, true:bit, false:bit);                          |
|     X_211:bat[:lng] := sql.bind(X_12:int, "sys":str, "lineitem":str, "l_extendedprice":str, 0:int);                                 |
|     X_284:bat[:lng] := algebra.projectionpath(C_281:bat[:oid], C_261:bat[:oid], X_234:bat[:oid], X_218:bat[:oid], C_13:bat[:oid], X |
: _211:bat[:lng]);                                                                                                                    :
|     X_286:lng := aggr.sum(X_284:bat[:lng]);                                                                                         |
|     X_287:lng := calc.lng(2:int, X_286:lng, 18:int, 5:int);                                                                         |
|     X_292:lng := calc./(X_287:lng, 700:lng);                                                                                        |
|     sql.resultSet("sys.L12":str, "avg_yearly":str, "decimal":str, 18:int, 3:int, 10:int, X_292:lng);                                |
| end user.main;                                                                                                                      |
| #inline               actions= 0 time=6 usec                                                                                        |
| #remap                actions= 5 time=39 usec                                                                                       |
| #costmodel            actions= 1 time=6 usec                                                                                        |
| #coercion             actions= 0 time=7 usec                                                                                        |
| #evaluate             actions=12 time=89 usec                                                                                       |
| #emptybind            actions=23 time=47 usec                                                                                       |
| #pushselect           actions= 7 time=68 usec                                                                                       |
| #aliases              actions=38 time=24 usec                                                                                       |
| #mergetable           actions= 0 time=109 usec                                                                                      |
| #deadcode             actions=118 time=52 usec                                                                                      |
| #aliases              actions= 0 time=1 usec                                                                                        |
| #constants            actions=16 time=33 usec                                                                                       |
| #commonTerms          actions= 5 time=15 usec                                                                                       |
| #projectionpath       actions= 7 time=16 usec                                                                                       |
| #deadcode             actions=12 time=12 usec                                                                                       |
| #reorder              actions= 1 time=35 usec                                                                                       |
| #matpack              actions= 0 time=1 usec                                                                                        |
| #multiplex            actions= 0 time=2 usec                                                                                        |
| #profiler             actions=1 time=2 usec                                                                                         |
| #candidates           actions=1 time=2 usec                                                                                         |
| #deadcode             actions= 0 time=10 usec                                                                                       |
| #wlc                  actions= 0 time=0 usec                                                                                        |
| #garbagecollector     actions= 1 time=114 usec                                                                                      |
| #total                actions=28 time=980 usec                                                                                      |
+-------------------------------------------------------------------------------------------------------------------------------------+
62 tuples
