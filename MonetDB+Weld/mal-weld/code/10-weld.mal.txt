+-------------------------------------------------------------------------------------------------------------------------------------+
| mal                                                                                                                                 |
+=====================================================================================================================================+
| function user.s2_1():void;                                                                                                          |
|     X_6:void := querylog.define("explain\nselect\n c_custkey,\n c_name,\n sum(l_extendedprice * (1 - l_discount)) as revenue,\n c_a |
: cctbal,\n n_name,\n c_address,\n c_phone,\n c_comment\nfrom\n customer,\n orders,\n lineitem,\n nation\nwhere\n c_custkey = o_custk :
: ey\n and l_orderkey = o_orderkey\n and o_orderdate >= date \\'1993-10-01\\'\n and o_orderdate < date \\'1993-10-01\\' + interval \\ :
: '3\\' month\n and l_returnflag = \\'R\\'\n and c_nationkey = n_nationkey\ngroup by\n c_custkey,\n c_name,\n c_acctbal,\n c_phone,\n :
:  n_name,\n c_address,\n c_comment\norder by\n revenue desc\nlimit 20;":str, "weld_pipe":str, 236:int);                              :
|     X_267:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_274:bat[:str] := bat.append(X_267:bat[:str], "sys.customer":str);                                                             |
|     X_284:bat[:str] := bat.append(X_274:bat[:str], "sys.customer":str);                                                             |
|     X_292:bat[:str] := bat.append(X_284:bat[:str], "sys.L5":str);                                                                   |
|     X_302:bat[:str] := bat.append(X_292:bat[:str], "sys.customer":str);                                                             |
|     X_310:bat[:str] := bat.append(X_302:bat[:str], "sys.nation":str);                                                               |
|     X_319:bat[:str] := bat.append(X_310:bat[:str], "sys.customer":str);                                                             |
|     X_328:bat[:str] := bat.append(X_319:bat[:str], "sys.customer":str);                                                             |
|     X_334:bat[:str] := bat.append(X_328:bat[:str], "sys.customer":str);                                                             |
|     X_269:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_276:bat[:str] := bat.append(X_269:bat[:str], "c_custkey":str);                                                                |
|     X_285:bat[:str] := bat.append(X_276:bat[:str], "c_name":str);                                                                   |
|     X_294:bat[:str] := bat.append(X_285:bat[:str], "revenue":str);                                                                  |
|     X_303:bat[:str] := bat.append(X_294:bat[:str], "c_acctbal":str);                                                                |
|     X_312:bat[:str] := bat.append(X_303:bat[:str], "n_name":str);                                                                   |
|     X_321:bat[:str] := bat.append(X_312:bat[:str], "c_address":str);                                                                |
|     X_329:bat[:str] := bat.append(X_321:bat[:str], "c_phone":str);                                                                  |
|     X_335:bat[:str] := bat.append(X_329:bat[:str], "c_comment":str);                                                                |
|     X_270:bat[:str] := bat.new(nil:str);                                                                                            |
|     X_278:bat[:str] := bat.append(X_270:bat[:str], "int":str);                                                                      |
|     X_287:bat[:str] := bat.append(X_278:bat[:str], "varchar":str);                                                                  |
|     X_296:bat[:str] := bat.append(X_287:bat[:str], "decimal":str);                                                                  |
|     X_305:bat[:str] := bat.append(X_296:bat[:str], "decimal":str);                                                                  |
|     X_314:bat[:str] := bat.append(X_305:bat[:str], "char":str);                                                                     |
|     X_323:bat[:str] := bat.append(X_314:bat[:str], "varchar":str);                                                                  |
|     X_331:bat[:str] := bat.append(X_323:bat[:str], "char":str);                                                                     |
|     X_337:bat[:str] := bat.append(X_331:bat[:str], "varchar":str);                                                                  |
|     X_271:bat[:int] := bat.new(nil:int);                                                                                            |
|     X_280:bat[:int] := bat.append(X_271:bat[:int], 32:int);                                                                         |
|     X_289:bat[:int] := bat.append(X_280:bat[:int], 25:int);                                                                         |
|     X_298:bat[:int] := bat.append(X_289:bat[:int], 18:int);                                                                         |
|     X_306:bat[:int] := bat.append(X_298:bat[:int], 15:int);                                                                         |
|     X_316:bat[:int] := bat.append(X_306:bat[:int], 25:int);                                                                         |
|     X_325:bat[:int] := bat.append(X_316:bat[:int], 40:int);                                                                         |
|     X_332:bat[:int] := bat.append(X_325:bat[:int], 15:int);                                                                         |
|     X_338:bat[:int] := bat.append(X_332:bat[:int], 117:int);                                                                        |
|     X_273:bat[:int] := bat.new(nil:int);                                                                                            |
|     X_282:bat[:int] := bat.append(X_273:bat[:int], 0:int);                                                                          |
|     X_291:bat[:int] := bat.append(X_282:bat[:int], 0:int);                                                                          |
|     X_300:bat[:int] := bat.append(X_291:bat[:int], 4:int);                                                                          |
|     X_308:bat[:int] := bat.append(X_300:bat[:int], 2:int);                                                                          |
|     X_317:bat[:int] := bat.append(X_308:bat[:int], 0:int);                                                                          |
|     X_327:bat[:int] := bat.append(X_317:bat[:int], 0:int);                                                                          |
|     X_333:bat[:int] := bat.append(X_327:bat[:int], 0:int);                                                                          |
|     X_340:bat[:int] := bat.append(X_333:bat[:int], 0:int);                                                                          |
|     X_9:int := sql.mvc();                                                                                                           |
|     X_32:bat[:str] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_returnflag":str, 0:int);                                      |
|     C_12:bat[:oid] := sql.tid(X_9:int, "sys":str, "lineitem":str);                                                                  |
|     X_15:bat[:lng] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_extendedprice":str, 0:int);                                   |
|     X_25:bat[:lng] := sql.bind(X_9:int, "sys":str, "lineitem":str, "l_discount":str, 0:int);                                        |
|     X_39:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 0:int);                   |
|     (X_42:bat[:oid], X_43:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 2:int); |
|     X_41:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "lineitem":str, "lineitem_l_orderkey_fkey":str, 1:int);                   |
|     X_55:bat[:date] := sql.bind(X_9:int, "sys":str, "orders":str, "o_orderdate":str, 0:int);                                        |
|     C_53:bat[:oid] := sql.tid(X_9:int, "sys":str, "orders":str);                                                                    |
|     X_62:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 0:int);                        |
|     (X_65:bat[:oid], X_66:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 2:int);      |
|     X_64:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "orders":str, "orders_o_custkey_fkey":str, 1:int);                        |
|     C_92:bat[:oid] := sql.tid(X_9:int, "sys":str, "customer":str);                                                                  |
|     X_94:bat[:int] := sql.bind(X_9:int, "sys":str, "customer":str, "c_custkey":str, 0:int);                                         |
|     X_101:bat[:str] := sql.bind(X_9:int, "sys":str, "customer":str, "c_name":str, 0:int);                                           |
|     X_108:bat[:str] := sql.bind(X_9:int, "sys":str, "customer":str, "c_address":str, 0:int);                                        |
|     X_115:bat[:str] := sql.bind(X_9:int, "sys":str, "customer":str, "c_phone":str, 0:int);                                          |
|     X_122:bat[:lng] := sql.bind(X_9:int, "sys":str, "customer":str, "c_acctbal":str, 0:int);                                        |
|     X_129:bat[:str] := sql.bind(X_9:int, "sys":str, "customer":str, "c_comment":str, 0:int);                                        |
|     X_136:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "customer":str, "customer_c_nationkey_fkey":str, 0:int);                 |
|     (X_139:bat[:oid], X_140:bat[:oid]) := sql.bind_idxbat(X_9:int, "sys":str, "customer":str, "customer_c_nationkey_fkey":str, 2:in |
: t);                                                                                                                                 :
|     X_138:bat[:oid] := sql.bind_idxbat(X_9:int, "sys":str, "customer":str, "customer_c_nationkey_fkey":str, 1:int);                 |
|     C_164:bat[:oid] := sql.tid(X_9:int, "sys":str, "nation":str);                                                                   |
|     X_166:bat[:str] := sql.bind(X_9:int, "sys":str, "nation":str, "n_name":str, 0:int);                                             |
|     wstate:ptr := weld.initstate();                                                                                                 |
|     X_47:bat[:oid] := weld.algebrathetaselect(X_32:bat[:str], C_12:bat[:oid], "R":str, "==":str, wstate:ptr);                       |
|     X_52:bat[:oid] := weld.sqlprojectdelta(X_47:bat[:oid], X_39:bat[:oid], X_42:bat[:oid], X_43:bat[:oid], X_41:bat[:oid], wstate:p |
: tr);                                                                                                                                :
|     X_73:bat[:oid] := weld.algebraselect(X_55:bat[:date], C_53:bat[:oid], "1993-10-01":date, "1994-01-01":date, true:bit, false:bit |
: , false:bit, wstate:ptr);                                                                                                           :
|     (X_80:bat[:oid], X_81:bat[:oid]) := weld.algebrajoin(X_52:bat[:oid], X_73:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng, wsta |
: te:ptr);                                                                                                                            :
|     X_79:bat[:oid] := weld.sqlprojectdelta(X_73:bat[:oid], X_62:bat[:oid], X_65:bat[:oid], X_66:bat[:oid], X_64:bat[:oid], wstate:p |
: tr);                                                                                                                                :
|     X_91:bat[:oid] := weld.algebraprojection(X_81:bat[:oid], X_79:bat[:oid], wstate:ptr);                                           |
|     (X_143:bat[:oid], X_144:bat[:oid]) := weld.algebrajoin(X_91:bat[:oid], C_92:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng, ws |
: tate:ptr);                                                                                                                          :
|     X_142:bat[:oid] := weld.sqlprojectdelta(C_92:bat[:oid], X_136:bat[:oid], X_139:bat[:oid], X_140:bat[:oid], X_138:bat[:oid], wst |
: ate:ptr);                                                                                                                           :
|     X_163:bat[:oid] := weld.algebraprojection(X_144:bat[:oid], X_142:bat[:oid], wstate:ptr);                                        |
|     (X_173:bat[:oid], X_174:bat[:oid]) := weld.algebrajoin(X_163:bat[:oid], C_164:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:lng,  |
: wstate:ptr);                                                                                                                        :
|     X_49:bat[:lng] := weld.algebraprojection(X_47:bat[:oid], X_15:bat[:lng], wstate:ptr);                                           |
|     X_85:bat[:lng] := weld.algebraprojection(X_80:bat[:oid], X_49:bat[:lng], wstate:ptr);                                           |
|     X_149:bat[:lng] := weld.algebraprojection(X_143:bat[:oid], X_85:bat[:lng], wstate:ptr);                                         |
|     X_175:bat[:lng] := weld.algebraprojection(X_173:bat[:oid], X_149:bat[:lng], wstate:ptr);                                        |
|     X_50:bat[:lng] := weld.algebraprojection(X_47:bat[:oid], X_25:bat[:lng], wstate:ptr);                                           |
|     X_86:bat[:lng] := weld.algebraprojection(X_80:bat[:oid], X_50:bat[:lng], wstate:ptr);                                           |
|     X_150:bat[:lng] := weld.algebraprojection(X_143:bat[:oid], X_86:bat[:lng], wstate:ptr);                                         |
|     X_176:bat[:lng] := weld.algebraprojection(X_173:bat[:oid], X_150:bat[:lng], wstate:ptr);                                        |
|     X_196:bat[:lng] := weld.batcalcsub(100:lng, X_176:bat[:lng], wstate:ptr);                                                       |
|     X_199:bat[:lng] := weld.batcalcmul(X_175:bat[:lng], X_196:bat[:lng], wstate:ptr);                                               |
|     X_172:bat[:str] := weld.algebraprojection(C_164:bat[:oid], X_166:bat[:str], wstate:ptr);                                        |
|     X_190:bat[:str] := weld.algebraprojection(X_174:bat[:oid], X_172:bat[:str], wstate:ptr);                                        |
|     X_100:bat[:int] := weld.algebraprojection(C_92:bat[:oid], X_94:bat[:int], wstate:ptr);                                          |
|     X_156:bat[:int] := weld.algebraprojection(X_144:bat[:oid], X_100:bat[:int], wstate:ptr);                                        |
|     X_182:bat[:int] := weld.algebraprojection(X_173:bat[:oid], X_156:bat[:int], wstate:ptr);                                        |
|     (X_201:bat[:oid], X_202:bat[:oid], X_203:bat[:lng]) := weld.groupgroup(X_182:bat[:int], wstate:ptr);                            |
|     (X_204:bat[:oid], X_205:bat[:oid], X_206:bat[:lng]) := weld.groupgroup(X_190:bat[:str], X_201:bat[:oid], wstate:ptr);           |
|     X_214:bat[:lng] := weld.aggrsubsum(X_199:bat[:lng], X_204:bat[:oid], X_205:bat[:oid], true:bit, true:bit, wstate:ptr);          |
|     X_135:bat[:str] := weld.algebraprojection(C_92:bat[:oid], X_129:bat[:str], wstate:ptr);                                         |
|     X_161:bat[:str] := weld.algebraprojection(X_144:bat[:oid], X_135:bat[:str], wstate:ptr);                                        |
|     X_187:bat[:str] := weld.algebraprojection(X_173:bat[:oid], X_161:bat[:str], wstate:ptr);                                        |
|     X_213:bat[:str] := weld.algebraprojection(X_205:bat[:oid], X_187:bat[:str], wstate:ptr);                                        |
|     X_114:bat[:str] := weld.algebraprojection(C_92:bat[:oid], X_108:bat[:str], wstate:ptr);                                         |
|     X_158:bat[:str] := weld.algebraprojection(X_144:bat[:oid], X_114:bat[:str], wstate:ptr);                                        |
|     X_184:bat[:str] := weld.algebraprojection(X_173:bat[:oid], X_158:bat[:str], wstate:ptr);                                        |
|     X_212:bat[:str] := weld.algebraprojection(X_205:bat[:oid], X_184:bat[:str], wstate:ptr);                                        |
|     X_211:bat[:str] := weld.algebraprojection(X_205:bat[:oid], X_190:bat[:str], wstate:ptr);                                        |
|     X_121:bat[:str] := weld.algebraprojection(C_92:bat[:oid], X_115:bat[:str], wstate:ptr);                                         |
|     X_159:bat[:str] := weld.algebraprojection(X_144:bat[:oid], X_121:bat[:str], wstate:ptr);                                        |
|     X_185:bat[:str] := weld.algebraprojection(X_173:bat[:oid], X_159:bat[:str], wstate:ptr);                                        |
|     X_210:bat[:str] := weld.algebraprojection(X_205:bat[:oid], X_185:bat[:str], wstate:ptr);                                        |
|     X_128:bat[:lng] := weld.algebraprojection(C_92:bat[:oid], X_122:bat[:lng], wstate:ptr);                                         |
|     X_160:bat[:lng] := weld.algebraprojection(X_144:bat[:oid], X_128:bat[:lng], wstate:ptr);                                        |
|     X_186:bat[:lng] := weld.algebraprojection(X_173:bat[:oid], X_160:bat[:lng], wstate:ptr);                                        |
|     X_209:bat[:lng] := weld.algebraprojection(X_205:bat[:oid], X_186:bat[:lng], wstate:ptr);                                        |
|     X_107:bat[:str] := weld.algebraprojection(C_92:bat[:oid], X_101:bat[:str], wstate:ptr);                                         |
|     X_157:bat[:str] := weld.algebraprojection(X_144:bat[:oid], X_107:bat[:str], wstate:ptr);                                        |
|     X_183:bat[:str] := weld.algebraprojection(X_173:bat[:oid], X_157:bat[:str], wstate:ptr);                                        |
|     X_208:bat[:str] := weld.algebraprojection(X_205:bat[:oid], X_183:bat[:str], wstate:ptr);                                        |
|     X_207:bat[:int] := weld.algebraprojection(X_205:bat[:oid], X_182:bat[:int], wstate:ptr);                                        |
|     (X_214:bat[:lng], X_213:bat[:str], X_212:bat[:str], X_211:bat[:str], X_210:bat[:str], X_209:bat[:lng], X_208:bat[:str], X_207:b |
: at[:int]) := weld.run(wstate:ptr, X_32:bat[:str], C_12:bat[:oid], "R":str, "==":str, X_39:bat[:oid], X_42:bat[:oid], X_43:bat[:oid] :
: , X_41:bat[:oid], X_55:bat[:date], C_53:bat[:oid], "1993-10-01":date, "1994-01-01":date, true:bit, false:bit, false:bit, nil:BAT, n :
: il:BAT, nil:lng, X_62:bat[:oid], X_65:bat[:oid], X_66:bat[:oid], X_64:bat[:oid], C_92:bat[:oid], nil:BAT, nil:BAT, false:bit, nil:l :
: ng, X_136:bat[:oid], X_139:bat[:oid], X_140:bat[:oid], X_138:bat[:oid], C_164:bat[:oid], X_15:bat[:lng], X_25:bat[:lng], 100:lng, X :
: _166:bat[:str], X_94:bat[:int], true:bit, true:bit, X_129:bat[:str], X_108:bat[:str], X_115:bat[:str], X_122:bat[:lng], X_101:bat[: :
: str]);                                                                                                                              :
|     C_220:bat[:oid] := algebra.firstn(X_214:bat[:lng], 20:lng, false:bit, false:bit);                                               |
|     wstate:ptr := weld.initstate();                                                                                                 |
|     X_230:bat[:str] := weld.algebraprojection(C_220:bat[:oid], X_213:bat[:str], wstate:ptr);                                        |
|     X_229:bat[:str] := weld.algebraprojection(C_220:bat[:oid], X_210:bat[:str], wstate:ptr);                                        |
|     X_228:bat[:str] := weld.algebraprojection(C_220:bat[:oid], X_212:bat[:str], wstate:ptr);                                        |
|     X_227:bat[:str] := weld.algebraprojection(C_220:bat[:oid], X_211:bat[:str], wstate:ptr);                                        |
|     X_226:bat[:lng] := weld.algebraprojection(C_220:bat[:oid], X_209:bat[:lng], wstate:ptr);                                        |
|     X_225:bat[:lng] := weld.algebraprojection(C_220:bat[:oid], X_214:bat[:lng], wstate:ptr);                                        |
|     X_224:bat[:str] := weld.algebraprojection(C_220:bat[:oid], X_208:bat[:str], wstate:ptr);                                        |
|     X_223:bat[:int] := weld.algebraprojection(C_220:bat[:oid], X_207:bat[:int], wstate:ptr);                                        |
|     (X_230:bat[:str], X_229:bat[:str], X_228:bat[:str], X_227:bat[:str], X_226:bat[:lng], X_225:bat[:lng], X_224:bat[:str], X_223:b |
: at[:int]) := weld.run(wstate:ptr, C_220:bat[:oid], X_213:bat[:str], X_210:bat[:str], X_212:bat[:str], X_211:bat[:str], X_209:bat[:l :
: ng], X_214:bat[:lng], X_208:bat[:str], X_207:bat[:int]);                                                                            :
|     (X_239:bat[:lng], X_240:bat[:oid], X_241:bat[:oid]) := algebra.sort(X_225:bat[:lng], true:bit, false:bit);                      |
|     wstate:ptr := weld.initstate();                                                                                                 |
|     X_249:bat[:str] := weld.algebraprojection(X_240:bat[:oid], X_230:bat[:str], wstate:ptr);                                        |
|     X_248:bat[:str] := weld.algebraprojection(X_240:bat[:oid], X_229:bat[:str], wstate:ptr);                                        |
|     X_247:bat[:str] := weld.algebraprojection(X_240:bat[:oid], X_228:bat[:str], wstate:ptr);                                        |
|     X_246:bat[:str] := weld.algebraprojection(X_240:bat[:oid], X_227:bat[:str], wstate:ptr);                                        |
|     X_245:bat[:lng] := weld.algebraprojection(X_240:bat[:oid], X_226:bat[:lng], wstate:ptr);                                        |
|     X_244:bat[:lng] := weld.algebraprojection(X_240:bat[:oid], X_225:bat[:lng], wstate:ptr);                                        |
|     X_243:bat[:str] := weld.algebraprojection(X_240:bat[:oid], X_224:bat[:str], wstate:ptr);                                        |
|     X_242:bat[:int] := weld.algebraprojection(X_240:bat[:oid], X_223:bat[:int], wstate:ptr);                                        |
|     (X_249:bat[:str], X_248:bat[:str], X_247:bat[:str], X_246:bat[:str], X_245:bat[:lng], X_244:bat[:lng], X_243:bat[:str], X_242:b |
: at[:int]) := weld.run(wstate:ptr, X_240:bat[:oid], X_230:bat[:str], X_229:bat[:str], X_228:bat[:str], X_227:bat[:str], X_226:bat[:l :
: ng], X_225:bat[:lng], X_224:bat[:str], X_223:bat[:int]);                                                                            :
|     C_257:bat[:oid] := algebra.subslice(X_242:bat[:int], 0:lng, 19:lng);                                                            |
|     wstate:ptr := weld.initstate();                                                                                                 |
|     X_265:bat[:str] := weld.algebraprojection(C_257:bat[:oid], X_249:bat[:str], wstate:ptr);                                        |
|     X_264:bat[:str] := weld.algebraprojection(C_257:bat[:oid], X_248:bat[:str], wstate:ptr);                                        |
|     X_263:bat[:str] := weld.algebraprojection(C_257:bat[:oid], X_247:bat[:str], wstate:ptr);                                        |
|     X_262:bat[:str] := weld.algebraprojection(C_257:bat[:oid], X_246:bat[:str], wstate:ptr);                                        |
|     X_261:bat[:lng] := weld.algebraprojection(C_257:bat[:oid], X_245:bat[:lng], wstate:ptr);                                        |
|     X_260:bat[:lng] := weld.algebraprojection(C_257:bat[:oid], X_244:bat[:lng], wstate:ptr);                                        |
|     X_259:bat[:str] := weld.algebraprojection(C_257:bat[:oid], X_243:bat[:str], wstate:ptr);                                        |
|     X_258:bat[:int] := weld.algebraprojection(C_257:bat[:oid], X_242:bat[:int], wstate:ptr);                                        |
|     (X_265:bat[:str], X_264:bat[:str], X_263:bat[:str], X_262:bat[:str], X_261:bat[:lng], X_260:bat[:lng], X_259:bat[:str], X_258:b |
: at[:int]) := weld.run(wstate:ptr, C_257:bat[:oid], X_249:bat[:str], X_248:bat[:str], X_247:bat[:str], X_246:bat[:str], X_245:bat[:l :
: ng], X_244:bat[:lng], X_243:bat[:str], X_242:bat[:int]);                                                                            :
|     sql.resultSet(X_334:bat[:str], X_335:bat[:str], X_337:bat[:str], X_338:bat[:int], X_340:bat[:int], X_258:bat[:int], X_259:bat[: |
: str], X_260:bat[:lng], X_261:bat[:lng], X_262:bat[:str], X_263:bat[:str], X_264:bat[:str], X_265:bat[:str]);                        :
| end user.s2_1;                                                                                                                      |
| #inline               actions= 0 time=9 usec                                                                                        |
| #remap                actions= 2 time=101 usec                                                                                      |
| #costmodel            actions= 1 time=10 usec                                                                                       |
| #coercion             actions= 4 time=50 usec                                                                                       |
| #evaluate             actions=10 time=111 usec                                                                                      |
| #emptybind            actions=11 time=51 usec                                                                                       |
| #pushselect           actions=12 time=106 usec                                                                                      |
| #aliases              actions=28 time=47 usec                                                                                       |
| #deadcode             actions=53 time=64 usec                                                                                       |
| #weld                 actions=74 time=1084 usec                                                                                     |
| #aliases              actions= 0 time=2 usec                                                                                        |
| #constants            actions=35 time=61 usec                                                                                       |
| #commonTerms          actions= 0 time=23 usec                                                                                       |
| #projectionpath       actions= 0 time=15 usec                                                                                       |
| #deadcode             actions= 0 time=104 usec                                                                                      |
| #matpack              actions= 0 time=1 usec                                                                                        |
| #multiplex            actions= 0 time=4 usec                                                                                        |
| #profiler             actions=1 time=3 usec                                                                                         |
| #candidates           actions=1 time=2 usec                                                                                         |
| #deadcode             actions= 0 time=28 usec                                                                                       |
| #wlc                  actions= 0 time=1 usec                                                                                        |
| #garbagecollector     actions= 1 time=291 usec                                                                                      |
| #total                actions=25 time=2475 usec                                                                                     |
+-------------------------------------------------------------------------------------------------------------------------------------+
182 tuples
